<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.road_friends.rentalcar.mapper.APIReservationMapper">

    <!-- 로그인한 사용자의 예약정보 전체조회 -->
    <select id="getUserReservations" resultType="com.road_friends.rentalcar.dto.APIReservationDto">
        SELECT sr.reservation_s_id, sr.rental_state,
        c.car_id, m.model_name,
        rental_parking.parking_name AS rentalLocationName,
        sr.reservation_s_start_date AS rental_datetime,
        sr.reservation_s_end_date AS return_datetime,
        sr.user_num, sr.reservation_s_create_date AS fast_reservation_create_at
        FROM short_reservation sr
        JOIN car c ON sr.car_id = c.car_id
        JOIN model m ON c.model_id = m.model_id
        JOIN parking rental_parking ON sr.rental_station_start = rental_parking.parking_id
        WHERE sr.user_num = #{userNum};
    </select>

    <!-- 로그인한 사용자의 특정 예약 상세 조회 -->
    <select id="getReservationDetail" resultType="com.road_friends.rentalcar.dto.APIReservationDto">
        SELECT reservation_s_id,
        car_id,
        user_num,
        reservation_s_start_date,
        reservation_s_end_date,
        reservation_s_create_date,
        share_option,
        reservation_status,
        rental_station_start,
        return_station_end
        FROM short_reservation
        WHERE reservation_s_id = #{reservationSId}
    </select>

    <!-- 예약 수정 -->
    <update id="updateReservation">
        UPDATE short_reservation
        SET car_id = #{carId},
            reservation_s_start_date = #{reservationSStartDate},
            reservation_s_end_date = #{reservationSEndDate},
            share_option = #{shareOption},
            reservation_status = #{reservationStatus}
        WHERE reservation_s_id = #{reservationSId} AND user_num = #{userNum}
    </update>

    <!-- 예약 취소(삭제) -->
    <delete id="deleteReservation">
        DELETE FROM short_reservation
        WHERE reservation_s_id = #{reservationSId} AND user_num = #{userNum}
    </delete>

    <!-- 짧은 예약(Short Reservation) 이용 시작 상태 변경 + 차량 상태 변경 -->
    <update id="updateRentalState">
        UPDATE short_reservation
        SET rental_state = #{newState}
        WHERE reservation_s_id = #{reservationId}
        AND rental_state = #{currentState}
    </update>

    <!-- 차량 상태 변경 (0 → 1) -->
    <update id="updateCarStatusToInUse">
        UPDATE car
        SET car_status = 1
        WHERE car_id = #{carId} AND car_status = 0
    </update>

    <!--  이용 완료 자동차 상태 변경  -->
    <!-- 예약 ID로 차량 ID 조회 -->
    <select id="getCarIdByReservationId" resultType="int">
        SELECT car_id FROM short_reservation WHERE reservation_s_id = #{reservationId}
    </select>

    <!-- 차량 상태 변경 (1 → 0) -->
    <update id="updateCarStatus">
        UPDATE car
        SET car_status = #{newStatus}
        WHERE car_id = #{carId}
        AND car_status = #{currentStatus}
    </update>
</mapper>